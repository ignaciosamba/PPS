C51 COMPILER V9.53.0.0   CONVERSOR                                                         05/05/2015 17:13:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE CONVERSOR
OBJECT MODULE PLACED IN conversor.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe conversor.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          #include "headers.h"
   2          #include "conversor.h"
   3          
   4          unsigned long convertir(void)
   5          {
   6   1              static LONGDATA rawValue;
   7   1              unsigned long mV;
   8   1      
   9   1                 // Copy the output value of the ADC
  10   1              rawValue.Byte[Byte3] = 0x00;
  11   1              rawValue.Byte[Byte2] = (unsigned char)ADC0H;
  12   1              rawValue.Byte[Byte1] = (unsigned char)ADC0M;
  13   1              rawValue.Byte[Byte0] = (unsigned char)ADC0L;
  14   1      
  15   1              //                           Vref (mV)
  16   1              //   measurement (mV) =   --------------- * result (bits)
  17   1              //                       (2^24)-1 (bits)
  18   1              //
  19   1              //   measurement (mV) =  result (bits) / ((2^24)-1 (bits) / Vref (mV))
  20   1              //
  21   1              //
  22   1              //   With a Vref (mV) of 2500:
  23   1              //
  24   1              //   measurement (mV) =  result (bits) / ((2^24)-1 / 2500)
  25   1              //
  26   1              //   measurement (mV) =  result (bits) / ((2^24)-1 / 2500)
  27   1              //
  28   1              //   measurement (mV) =  result (bits) / (16777215 / 2500)
  29   1              //
  30   1              //   measurement (mV) =  result (bits) / (6710)
  31   1      
  32   1              mV = rawValue.result / 6710;        // Because of bounds issues, this
  33   1                                                 // calculation has been manipulated as
  34   1                                                 // shown above
  35   1                                                 // (i.e. 2500 (VREF) * 2^24 (ADC result)
  36   1                                                 // is greater than 2^32)
  37   1      
  38   1              return mV;
  39   1      
  40   1      }
  41          /**
  42           * @brief por ahora no envia un carajo.. imprime en la UART nomas
  43           * @details [long description]
  44           */
  45          void enviar_dato(unsigned long dato)
  46          {
  47   1              printf("voltage: %4ld mV\n",dato);
  48   1              // dato_convertido = dato;
  49   1              // f_enviar_dato = true;
  50   1      
  51   1              // if(ADC0MUX == 0x08)
  52   1              //    pin_actual = 0;
  53   1              // else if(ADC0MUX == 0x18)
  54   1              //    pin_actual = 1;
  55   1              // else if(ADC0MUX == 0x28)
C51 COMPILER V9.53.0.0   CONVERSOR                                                         05/05/2015 17:13:25 PAGE 2   

  56   1              //    pin_actual = 2;
  57   1              // else if(ADC0MUX == 0x38)
  58   1              //    pin_actual = 3;
  59   1              // else if(ADC0MUX == 0x48)
  60   1              //    pin_actual = 4;
  61   1              // else if(ADC0MUX == 0x58)
  62   1              //    pin_actual = 5;
  63   1              // else if(ADC0MUX == 0x68)
  64   1              //    pin_actual = 6;
  65   1              // else if(ADC0MUX == 0x78)
  66   1              //    pin_actual = 7;
  67   1      }
  68          
  69          void cambiar_pin (void)
  70          {
  71   1              if(ADC0MUX & 0x78)
  72   1                ADC0MUX = 0x08;
  73   1              else
  74   1              {
  75   2                ADC0MUX = ((ADC0MUX & 0xf0) >> 4) | ((ADC0MUX & 0x0f) << 4); //Swapeo los 4 MSB con los 4 LSB para aume
             -ntar en uno el LSB
  76   2                ADC0MUX++;
  77   2                ADC0MUX = ((ADC0MUX & 0xf0) >> 4) | ((ADC0MUX & 0x0f) << 4); //Swapeo una vez mas asi me queda incremen
             -tado los 4 MSB y asi me movi de puerto. 
  78   2              }
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     96    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
